This document defines the core of the QUIC transport protocol QUIC provides applications with flow controlled streams for structured communication  low latency connection establishment  and network path migration  QUIC includes security measures that ensure confidentiality  integrity  and availability in a range of deployment circumstances  Accompanying documents describe the integration of TLS for key negotiation  loss detection  and an exemplary congestion control algorithm  QUIC is a connection oriented protocol that creates a stateful interaction between a client and server The QUIC handshake combines negotiation of cryptographic and transport parameters Endpoints communicate in QUIC by exchanging QUIC packets  Most packets contain frames  which carry control information and application data between endpoints  QUIC authenticates the entirety of each packet and encrypts as much of each packet as is practical  Application protocols exchange information over a QUIC connection via streams  which are ordered sequences of bytes  Two types of streams can be created  bidirectional streams  which allow both endpoints to send data  and unidirectional streams  which allow a single endpoint to send data  A credit based scheme is used to limit stream creation and to bound the amount of data that can be sent  QUIC connections are not strictly bound to a single network path  Connection migration uses connection identifiers to allow connections to transfer to a new network path  Only clients are able to migrate in this version of QUIC  This design also allows connections to continue after changes in network topology or address mappings  such as might be caused by NAT rebinding  Once established  multiple options are provided for connection termination  Applications can manage a graceful shutdown  endpoints can negotiate a timeout period  errors can cause immediate connection teardown  and a stateless mechanism provides for termination of connections after one endpoint has lost state  
